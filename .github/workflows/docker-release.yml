name: Docker (release) build and push

on:
  push:
    tags: [ 0.*, test-* ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Prep docker experimentals
      run: echo "DOCKER_CLI_EXPERIMENTAL=enabled" >> $GITHUB_ENV
    
    - name: Prep GIT_TAG
      run: echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    
    - uses: actions/checkout@v2
    
    - name: Dotenv Action
      uses: falti/dotenv-action@v0.2.5

    - name: Build
      run: |
        docker build -f ${DOCKER_DOCKERFILE}.amd64 -t ${DOCKER_TAG}:amd64-latest .
        docker build -f ${DOCKER_DOCKERFILE}.armv7 -t ${DOCKER_TAG}:armv7-latest .
        docker build -f ${DOCKER_DOCKERFILE}.aarch64 -t ${DOCKER_TAG}:aarch64-latest .
    
    - name: Push base images to docker hub
      run: |
        echo ${{ secrets.docker_token }} | docker login -u ${{ secrets.docker_username }} --password-stdin
        docker tag ${DOCKER_TAG}:amd64-latest ${DOCKER_TAG}:amd64-$GIT_TAG
        docker tag ${DOCKER_TAG}:armv7-latest ${DOCKER_TAG}:armv7-$GIT_TAG
        docker tag ${DOCKER_TAG}:aarch64-latest ${DOCKER_TAG}:aarch64-$GIT_TAG
        
        docker push ${DOCKER_TAG}:amd64-latest
        docker push ${DOCKER_TAG}:amd64-$GIT_TAG
        docker push ${DOCKER_TAG}:armv7-latest
        docker push ${DOCKER_TAG}:armv7-$GIT_TAG
        docker push ${DOCKER_TAG}:aarch64-latest
        docker push ${DOCKER_TAG}:aarch64-$GIT_TAG
      
    - name: Create manifest images + tag images
      run: |
        # Note: Manifests are created from tags from docker.io, so we must push first, then create manifest, then push again
        docker manifest create ${DOCKER_TAG}:latest \
          ${DOCKER_TAG}:amd64-latest \
          ${DOCKER_TAG}:armv7-latest \
          ${DOCKER_TAG}:aarch64-latest
          
        docker manifest create ${DOCKER_TAG}:$GIT_TAG \
          ${DOCKER_TAG}:amd64-$GIT_TAG \
          ${DOCKER_TAG}:armv7-$GIT_TAG \
          ${DOCKER_TAG}:aarch64-$GIT_TAG
        
        docker manifest push ${DOCKER_TAG}:latest
        docker manifest push ${DOCKER_TAG}:$GIT_TAG